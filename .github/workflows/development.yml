name: Development Check and Validation
on:
  pull_request:
    branches:
      - 'development'
      - 'main'

env:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  tflint:
    name: Code Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        name: Cache Plugin Directory
        with:
          path: ~/.tflint.d/plugins
          key: ubuntu-latest-tflint-${{ hashFiles('.tflint.hcl')}}
      
      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v1
        with:
          tflint_version: latest
      
      - name: Show Version
        run: tflint --version

      - name: Initialize TFLint
        run: tflint --init
      
      # Will only show details if there are issues
      # The action itself has no outputs
      - name: Run TFLint
        run: tflint -f compact
  
  setup-terraform:
    name: Setup & Check Terraform
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1.2.1
        with:
          cli_config_credentials_hostname: 'app.terraform.io'
          cli_config_credentials_token: ${{ secrets.TFC_TOKEN }}
          terraform_version: latest
          terraform_wrapper: true

      - name: Terraform Format
        id: fmt
        run: terraform fmt -list=true -write=false -diff=true
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: false

      - name: Output Terraform Workflow Results
        uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format \`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization \`${{ steps.init.outcome }}\`
            #### Terraform Validation \`${{ steps.validate.outputs.stdout }}\`
            #### Terraform Plan \`${{ steps.plan.outcome }}\`
            
            <details><summary>Plan Output Shown Below:</summary>
            
            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`
            
            </details>
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
              
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      # - name: Merge Temp Feature Branch to Development
      #   uses: devmasx/merge-branch@master
      #   if: steps.plan.outcome == 'success'
      #   with: 
      #     type: now
      #     target_branch: 'development'
      #     github_token: ${{ github.token }}

